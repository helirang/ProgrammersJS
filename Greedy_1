#include <string>
#include <vector>
#include <algorithm>

using namespace std;

int solution(int n, vector<int> lost, vector<int> reserve) {
    int answer = 0;
    
    vector<int> CheckVector;
    int LargeVecSize;
    
    CheckVector.assign(n,1);

    answer = n - lost.size();
    
    sort(lost.begin(),lost.end());
    sort(reserve.begin(),reserve.end());
    
    LargeVecSize = lost.size() > reserve.size() ? lost.size() : reserve.size();
    
    for(int j=0; j < LargeVecSize; j++)
    {
        if(j < lost.size())
        {
            if( CheckVector[lost[j]-1] == 2)
            {
                answer += 1;
            }
            CheckVector[lost[j]-1] -= 1; 
        }
        if(j < reserve.size())
        {   
            if(CheckVector[reserve[j]-1] == 0)
            {
                answer += 1;
            }
            
            CheckVector[reserve[j]-1] += 1; 
        }
    }
    
    for(int i=0; i < reserve.size(); i++)
    {
       if(CheckVector[reserve[i]-1] == 2)
       {
           if(reserve[i]-2 >= 0 && CheckVector[reserve[i]-2]==0)
            {
                answer += 1;
                CheckVector[reserve[i]-2]=1;
            }
            else
            {
                 if(CheckVector[reserve[i]]==0 && reserve[i] < n)
                 {
                     answer += 1;
                     CheckVector[reserve[i]]=1;
                 }
            } 
       }
    }
    
    return answer;
}
